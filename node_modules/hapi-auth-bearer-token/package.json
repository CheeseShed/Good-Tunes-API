{
  "name": "hapi-auth-bearer-token",
  "description": "Simple Bearer authentication plugin. Accepts as access_token as query param also.",
  "version": "1.1.3",
  "author": {
    "name": "John Brett",
    "email": "johnbrett7@gmail.com",
    "url": "http://blog.johnbrett.me"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/johnbrett/hapi-auth-bearer-token"
  },
  "main": "index",
  "keywords": [
    "hapi",
    "plugin",
    "auth",
    "bearer",
    "access_token"
  ],
  "engines": {
    "node": ">=0.10.22"
  },
  "dependencies": {
    "boom": "2.x.x",
    "hoek": "2.x.x"
  },
  "peerDependencies": {
    "hapi": "6.x.x"
  },
  "devDependencies": {
    "hapi": "6.x.x",
    "lab": "3.x.x"
  },
  "scripts": {
    "test": "node ./node_modules/lab/bin/lab -c"
  },
  "bugs": {
    "url": "https://github.com/johnbrett/hapi-auth-bearer-token/issues"
  },
  "homepage": "https://github.com/johnbrett/hapi-auth-bearer-token",
  "directories": {
    "test": "test"
  },
  "license": "MIT",
  "readme": "# Hapi auth bearer token [![Build Status](https://travis-ci.org/johnbrett/hapi-auth-bearer-token.svg?branch=master)](https://travis-ci.org/johnbrett/hapi-auth-bearer-token) [![Dependency Status](https://david-dm.org/johnbrett/hapi-auth-bearer-token.svg)](https://david-dm.org/johnbrett/hapi-auth-bearer-token)\n\n[**hapi**](https://github.com/spumko/hapi) Bearer and Access Token authentication plugin\n\nBearer authentication requires validating a token passed in by either the bearer authorization header, or by an access_token query parameter. The `'bearer-access-token'` scheme takes the following options:\n\n- `validateFunc` - (required) a token lookup and validation function with the signature `function(token, callback)` where:\n    - `token` - the auth token received from the client.\n    - `callback` - a callback function with the signature `function(err, isValid, credentials)` where:\n        - `err` - an internal error.\n        - `isValid` - `true` if both the username was found and the password matched, otherwise `false`.\n        - `credentials` - a credentials object passed back to the application in `request.auth.credentials`. Typically, `credentials` are only\n          included when `isValid` is `true`, but there are cases when the application needs to know who tried to authenticate even when it fails\n          (e.g. with authentication mode `'try'`).\n- `options` - (optional) \n    - `accessTokenName` (Default: 'access_token') - Rename the token query parameter key e.g. 'sample_token_name' would rename the token query parameter to /route1?sample_token_name=12345678.\n    - `allowQueryToken` (Default: true) - Disable accepting token by query parameter, forcing token to be passed in through authorization header.\n\n```javascript\nvar Hapi = require('hapi');\n\nvar server = Hapi.createServer('localhost', 8080, {\n    cors: true\n});\n\nserver.pack.register(require('hapi-auth-bearer-token'), function (err) {\n\n    server.auth.strategy('simple', 'bearer-access-token', {\n        validateFunc: function( token, callback ) {\n            // Use a real strategy here,\n            // comparing with a token from your database for example\n            if(token === \"1234\"){\n                callback(null, true, { token: token })\n            } else {\n                callback(null, false, { token: token })\n            }\n        }\n    });\n\n    server.route({ method: 'GET', path: '/', config: { auth: 'simple' } });\n\n    server.start(function () {\n        console.log('Server started at: ' + server.info.uri);\n    })\n});\n```\n\nLicense MIT @ John Brett 2014",
  "readmeFilename": "README.md",
  "_id": "hapi-auth-bearer-token@1.1.3",
  "_shasum": "6f10a9d20d3a7ffec94ce1a8df7c57a561349d0e",
  "_from": "hapi-auth-bearer-token@",
  "_resolved": "https://registry.npmjs.org/hapi-auth-bearer-token/-/hapi-auth-bearer-token-1.1.3.tgz"
}
